name: Deploy

on: push

env:
  NODE_ENV: production
  GKE_CLUSTER: eu-backend
  GKE_ZONE: europe-west1-d
  DEPLOYMENT_NAME: pivo-games-backend
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  IMAGE_NAME: backend
  PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
  PG_USER: ${{ secrets.PG_USER }}
  PG_DB: ${{ secrets.PG_DB }}
  PG_HOST: ${{ secrets.PG_HOST }}

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    env:
      NODE_ENV: development
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
      - name: Install dependencies
        run: npm i
      - name: Run tests
        run: npm test
  linter:
    name: Lint code
    runs-on: ubuntu-latest
    needs: test
    env:
      NODE_ENV: development
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
      - name: Install deps, eslint and plugins
        run: npm i
      - name: Run linter
        run: npm run lint
  push-image:
    name: Deploy docker image to GCP
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: linter
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build image
        run: docker-compose build --build-arg PG_HOST=${PG_HOST} --build-arg PG_PASSWORD=${PG_PASSWORD} --build-arg PG_DB=${PG_DB} --build-arg PG_DB=${PG_DB} server
      - name: Setup GCP
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_REGISTRY_SERVICE }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      - name: Tag image
        run: docker tag "pivo-games-backend_server" eu.gcr.io/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA
      - name: Auth gcloud registry service
        run: gcloud --quiet auth configure-docker
      - name: Push image to the registry
        run: docker push eu.gcr.io/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA
  deploy-cluster:
    name: Deploy Kubernetes cluster to GCP
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: push-image
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup GCP
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_KUBERNETES_SERVICE }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      - name: Get Credentials
        run: gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      - name: Kustomize Install
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
      - name: Kustomize Deploy
        run: |-
          ./kustomize edit set image eu.gcr.io/PROJECT_ID/IMAGE:TAG=eu.gcr.io/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
